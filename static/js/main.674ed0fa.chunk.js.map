{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","nameInputId","uuidv4","numberInputId","inputChange","evt","currentTarget","value","setState","onAddContact","event","preventDefault","props","onSubmit","reset","this","className","styles","formContact","htmlFor","formLabel","type","placeholder","formInput","onChange","id","button","Component","Filter","filter","filterTitle","filterInput","ContactList","contacts","onDeleteContact","map","contactItem","buttonDel","onClick","App","getName","some","contact","toLowerCase","addContact","alert","deleteContact","contactId","prevState","changeFilter","e","getVisibleContactName","normalizedFilter","includes","localStorage","getItem","parsedContact","JSON","parse","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.674ed0fa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContact\":\"ContactForm_formContact__1JsXq\",\"formLabel\":\"ContactForm_formLabel___0cp5\",\"formInput\":\"ContactForm_formInput__12ivW\",\"button\":\"ContactForm_button__3WtqI\"};","import React, { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n// import PropTypes, { number } from 'prop-types';\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  nameInputId = uuidv4();\r\n  numberInputId = uuidv4();\r\n\r\n  inputChange = evt => {\r\n    const { name, value } = evt.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onAddContact = event => {\r\n    event.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    const { onAddContact, inputChange, nameInputId, numberInputId } = this;\r\n    return (\r\n      <form className={styles.formContact} onSubmit={onAddContact}>\r\n        <label htmlFor={nameInputId} className={styles.formLabel}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"введите имя\"\r\n            name=\"name\"\r\n            value={name}\r\n            className={styles.formInput}\r\n            onChange={inputChange}\r\n            id={nameInputId}\r\n          />\r\n        </label>\r\n\r\n        <label htmlFor={numberInputId} className={styles.formLabel}>\r\n          Number\r\n          <input\r\n            type=\"telephone\"\r\n            placeholder=\"введите номер\"\r\n            name=\"number\"\r\n            className={styles.formInput}\r\n            value={number}\r\n            onChange={inputChange}\r\n            id={numberInputId}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={styles.button}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\n// ContactForm.propTypes = {\r\n//   //   message: PropTypes.string.isRequired,\r\n// };\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <lable className={styles.filter}>\r\n      <p className={styles.filterTitle}>Find contacts by name</p>\r\n      <input\r\n        className={styles.filterInput}\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n    </lable>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li className={styles.contactItem} key={id}>\r\n          {name}: {number}\r\n          <button\r\n            className={styles.buttonDel}\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            Deleted\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  getName = name => {\n    return this.state.contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n  };\n\n  addContact = ({ name, number }) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    if (this.getName(name)) {\n      alert('Такой контакт существует');\n      return;\n    } else {\n      if (contact.name === '' && contact.number === '') {\n        return alert('Просьба заполнить поля');\n      } else {\n        this.setState(({ contacts }) => ({\n          contacts: [contact, ...contacts],\n        }));\n      }\n    }\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContactName = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContact = JSON.parse(contacts);\n\n    if (parsedContact) {\n      this.setState({ contacts: parsedContact });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  render() {\n    const { filter } = this.state;\n    const { addContact, deleteContact, changeFilter } = this;\n\n    const visibleContacts = this.getVisibleContactName();\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App_title\">Phonebook</h1>\n        <ContactForm onSubmit={addContact} />\n        <h2 className=\"App_title\">Contacts</h2>\n        <Filter value={filter} onChange={changeFilter} />\n\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__2e_Jf\",\"filterInput\":\"Filter_filterInput__2SyCy\",\"filterTitle\":\"Filter_filterTitle__8ztc2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactList_contactItem__3X-x9\",\"buttonDel\":\"ContactList_buttonDel__1tNMI\"};"],"sourceRoot":""}